name: Legacy

on: [pull_request]

env:
  PULL_COMMENT: |
    |legacy UI changes|[master diff](https://trezorui.martinmilata.cz/${{ github.run_id }}/master_diff/)|[device test](https://trezorui.martinmilata.cz/${{ github.run_id }}/T1B1-legacy_device_test/)|
    |-----------------|---------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------|

jobs:
  legacy_firmware:
    name: Firmware
    runs-on: ubuntu-latest
    strategy:
      matrix:
        coins: [universal, btconly]
        # type: [normal, debuglink]
        type: [debuglink]
    env:
      BITCOIN_ONLY: ${{ matrix.coins == 'universal' && '0' || '1' }}
      DEBUG_LINK: ${{ matrix.type == 'debuglink' && '1' || '0' }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: ./.github/actions/environment
      - run: nix-shell --run "export PRODUCTION=1 && poetry run legacy/script/cibuild"
      - run: nix-shell --run "poetry run legacy/script/setup"
      - run: nix-shell --run "export PRODUCTION=0 && poetry run legacy/script/cibuild"
      - run: nix-shell --run "poetry run make -C legacy/demo"
        if: matrix.coins == 'universal' && matrix.type == 'normal'
      - uses: actions/upload-artifact@v3
        with:
          name: legacy-firmware-${{ matrix.coins }}-${{ matrix.type }}
          path: legacy/firmware/firmware-*.bin
          retention-days: 7

  legacy_emu:
    name: Emulator
    runs-on: ubuntu-latest
    strategy:
      matrix:
        coins: [universal, btconly]
        # type: [normal, debuglink]
        type: [debuglink]
        arch: [x86_64]
        asan: ${{ fromJSON(github.event_name == 'schedule' && '["noasan", "asan"]' || '["noasan"]') }}
    env:
      EMULATOR: 1
      BITCOIN_ONLY: ${{ matrix.coins == 'universal' && '0' || '1' }}
      DEBUG_LINK: ${{ matrix.type == 'debuglink' && '1' || '0' }}
      ADDRESS_SANITIZER: ${{ matrix.asan == 'asan' && '1' || '0' }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: ./.github/actions/environment
      - run: nix-shell --run "poetry run legacy/script/cibuild"
      - uses: actions/upload-artifact@v3
        with:
          name: legacy-emu-${{ matrix.coins }}-${{ matrix.type }}-${{ matrix.asan }}
          path: legacy/firmware/*.elf
          retention-days: 7

  legacy_device_test:
    name: Device test
    runs-on: ubuntu-latest
    needs: legacy_emu
    strategy:
      matrix:
        coins: [universal, btconly]
        asan: ${{ fromJSON(github.event_name == 'schedule' && '["noasan", "asan"]' || '["noasan"]') }}
    env:
      EMULATOR: 1
      TREZOR_PYTEST_SKIP_ALTCOINS: ${{ matrix.coins == 'universal' && '0' || '1' }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/download-artifact@v3
        with:
          name: legacy-emu-${{ matrix.coins }}-debuglink-${{ matrix.asan }}
          path: legacy/firmware
      - run: chmod +x legacy/firmware/*.elf
      - uses: ./.github/actions/environment
      - run: nix-shell --run "poetry run make -C legacy test_emu_ui"
        if: matrix.coins == 'universal'
      - run: nix-shell --run "poetry run make -C legacy test_emu"
        if: matrix.coins != 'universal'
      - uses: ./.github/actions/ui-report
        with:
          model: T1B1
        if: ${{ always() && matrix.coins == 'universal' }}
      - uses: ./.github/actions/ui-comment
        if: ${{ failure() && matrix.coins == 'universal' }}

  legacy_upgrade_test:
    name: Upgrade test
    runs-on: ubuntu-latest
    needs: legacy_emu
    strategy:
      matrix:
        asan: ${{ fromJSON(github.event_name == 'schedule' && '["noasan", "asan"]' || '["noasan"]') }}
    env:
      TREZOR_UPGRADE_TEST: legacy
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/download-artifact@v3
        with:
          name: legacy-emu-universal-debuglink-${{ matrix.asan }}
          path: legacy/firmware
      - run: chmod +x legacy/firmware/*.elf
      - uses: ./.github/actions/environment
      - run: nix-shell --run "tests/download_emulators.sh"
      - run: nix-shell --run "poetry run pytest tests/upgrade_tests"

  legacy_hwi_test:
    name: HWI test
    if: false  # XXX currently failing
    continue-on-error: true
    runs-on: ubuntu-latest
    needs: legacy_emu
    env:
      EMULATOR: 1
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/download-artifact@v3
        with:
          name: legacy-emu-universal-debuglink-noasan
          path: legacy/firmware
      - run: chmod +x legacy/firmware/*.elf
      - uses: ./.github/actions/environment
      - run: nix-shell --run "git clone --depth=1 https://github.com/bitcoin-core/HWI.git"
      # see python_test for explanation of _PYTHON_SYSCONFIGDATA_NAME
      - run: nix-shell --arg fullDeps true --run "unset _PYTHON_SYSCONFIGDATA_NAME && cd HWI && poetry install && poetry run ./test/test_trezor.py --model_1 ../legacy/firmware/trezor.elf bitcoind"

  legacy_ui_master:
    name: UI diff from master
    runs-on: ubuntu-latest
    needs:
      - legacy_device_test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: ui-records
      - uses: ./.github/actions/environment
      - run: "for F in screens_*.tar; do tar xvf $F; done"
      - run: nix-shell --run "poetry run python -m tests.ui_tests.reporting master-diff T1"
      - run: mv tests/ui_tests/reports/master_diff .
      - run: |
          chmod 600 ./ssh-id
          nix-shell -p rsync -p openssh --run "rsync -av -e 'ssh -i ./ssh-id -o StrictHostKeyChecking=off' master_diff ui@trezorui.martinmilata.cz:ci-storage/${{ github.run_id }}"

  legacy_ui_comment:
    name: Post comment with UI diff URLs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - run: |
          git fetch origin main
          git diff --quiet origin/main...HEAD -- tests/ui_tests/fixtures.json
          echo "FIXTURES_CHANGED=$?" >> $GITHUB_OUTPUT
        id: check-fixtures-changed
      - uses: ./.github/actions/ui-comment
        if: ${{ steps.check-fixtures-changed.outputs.FIXTURES_CHANGED == '1' }}
