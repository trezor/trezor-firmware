name: Core

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize  # branch head update
      - labeled
  workflow_dispatch:
  schedule:
    - cron: '15 23 * * *'  # every day @ 23:15
  push:
    branches:
      - 'release/**'

# cancel any previous runs on the same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  id-token: write       # for fetching the OIDC token
  contents: read        # for actions/checkout
  pull-requests: write  # for dflook comments on PR

env:
  SDL_VIDEODRIVER: dummy
  PULL_COMMENT_PATH: ${{ github.workspace }}/tests/core-pull-comment.md
  TREZOR_PYTEST_LOGS_DIR: ${{ github.workspace }}/tests/

jobs:
  param:
    name: Determine pipeline parameters
    runs-on: ubuntu-latest
    outputs:
      test_lang: ${{ steps.set_vars.outputs.test_lang }}
      asan: ${{ steps.set_vars.outputs.asan }}
    steps:
      - id: set_vars
        name: Set variables
        run: |
          echo test_lang=${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'translations') && '[\"en\", \"cs\", \"fr\", \"de\", \"es\", \"pt\"]' || '[\"en\"]' }} >> $GITHUB_OUTPUT
          # TODO: fix ASAN tests on nightly CI runs (#5143)
          echo asan=${{ '[\"noasan\"]' }} >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

  core_firmware:
    name: Build firmware (${{ matrix.model }}, ${{ matrix.coins }}, ${{ matrix.type }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        model: ${{ fromJSON(startsWith(github.ref, 'refs/heads/release/') && '["T2B1", "T2T1", "T3B1", "T3T1", "T3W1"]' || '["T2T1", "T3B1", "T3T1", "T3W1"]') }}
        coins: [universal, btconly]
        type: ${{ fromJSON(github.event_name == 'schedule' && '["normal", "debuglink", "production"]' || '["normal", "debuglink"]') }}
        more: [0, 1, 2, 3, 4, 6, 7, 8, 9]
    env:
      TREZOR_MODEL: ${{ matrix.model }}
      BITCOIN_ONLY: ${{ matrix.coins == 'universal' && '0' || '1' }}
      PYOPT: ${{ matrix.type == 'debuglink' && '0' || '1' }}
      PRODUCTION: ${{ matrix.type == 'production' && '1' || '0' }}
      BOOTLOADER_DEVEL: ${{ matrix.model == 'T3W1' && '1' || '0' }}
      QUIET_MODE: 1
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: ./.github/actions/environment
      - run: "nix --version"
      - run: "echo nix install success"
