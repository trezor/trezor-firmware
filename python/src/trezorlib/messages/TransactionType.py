# Automatically generated by pb2py
# fmt: off
from .. import protobuf as p

from .TxInputType import TxInputType
from .TxOutputBinType import TxOutputBinType
from .TxOutputType import TxOutputType

if __debug__:
    try:
        from typing import Dict, List  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class TransactionType(p.MessageType):

    def __init__(
        self,
        *,
        inputs: List[TxInputType] = None,
        bin_outputs: List[TxOutputBinType] = None,
        outputs: List[TxOutputType] = None,
        version: int = None,
        lock_time: int = None,
        inputs_cnt: int = None,
        outputs_cnt: int = None,
        extra_data: bytes = None,
        extra_data_len: int = None,
        expiry: int = None,
        overwintered: bool = None,
        version_group_id: int = None,
        timestamp: int = None,
        branch_id: int = None,
    ) -> None:
        self.inputs = inputs if inputs is not None else []
        self.bin_outputs = bin_outputs if bin_outputs is not None else []
        self.outputs = outputs if outputs is not None else []
        self.version = version
        self.lock_time = lock_time
        self.inputs_cnt = inputs_cnt
        self.outputs_cnt = outputs_cnt
        self.extra_data = extra_data
        self.extra_data_len = extra_data_len
        self.expiry = expiry
        self.overwintered = overwintered
        self.version_group_id = version_group_id
        self.timestamp = timestamp
        self.branch_id = branch_id

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('version', p.UVarintType, None),
            2: ('inputs', TxInputType, p.FLAG_REPEATED),
            3: ('bin_outputs', TxOutputBinType, p.FLAG_REPEATED),
            4: ('lock_time', p.UVarintType, None),
            5: ('outputs', TxOutputType, p.FLAG_REPEATED),
            6: ('inputs_cnt', p.UVarintType, None),
            7: ('outputs_cnt', p.UVarintType, None),
            8: ('extra_data', p.BytesType, None),
            9: ('extra_data_len', p.UVarintType, None),
            10: ('expiry', p.UVarintType, None),
            11: ('overwintered', p.BoolType, None),
            12: ('version_group_id', p.UVarintType, None),
            13: ('timestamp', p.UVarintType, None),
            14: ('branch_id', p.UVarintType, None),
        }
