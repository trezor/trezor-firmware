# Automatically generated by pb2py
# fmt: off
from .. import protobuf as p

if __debug__:
    try:
        from typing import Dict, List, Optional
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        Dict, List, Optional = None, None, None  # type: ignore


class RippleMemo(p.MessageType):

    def __init__(
        self,
        memo_data: str = None,
        memo_format: str = None,
        memo_type: str = None,
    ) -> None:
        self.memo_data = memo_data
        self.memo_format = memo_format
        self.memo_type = memo_type

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('memo_data', p.UnicodeType, 0),
            2: ('memo_format', p.UnicodeType, 0),
            3: ('memo_type', p.UnicodeType, 0),
        }
