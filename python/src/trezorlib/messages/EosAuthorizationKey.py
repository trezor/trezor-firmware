# Automatically generated by pb2py
# fmt: off
# isort:skip_file
from .. import protobuf as p

if __debug__:
    try:
        from typing import Dict, List, Optional  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class EosAuthorizationKey(p.MessageType):

    def __init__(
        self,
        *,
        type: int,
        weight: int,
        address_n: Optional[List[int]] = None,
        key: Optional[bytes] = None,
    ) -> None:
        self.address_n = address_n if address_n is not None else []
        self.type = type
        self.weight = weight
        self.key = key

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('type', p.UVarintType, p.FLAG_REQUIRED),
            2: ('key', p.BytesType, None),
            3: ('address_n', p.UVarintType, p.FLAG_REPEATED),
            4: ('weight', p.UVarintType, p.FLAG_REQUIRED),
        }
