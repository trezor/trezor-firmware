# Automatically generated by pb2py
# fmt: off
from .. import protobuf as p

from .RippleIssuedAmount import RippleIssuedAmount

if __debug__:
    try:
        from typing import Dict, List, Optional
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        Dict, List, Optional = None, None, None  # type: ignore


class RippleTrustSet(p.MessageType):

    def __init__(
        self,
        limit_amount: RippleIssuedAmount = None,
        quality_in: int = None,
        quality_out: int = None,
    ) -> None:
        self.limit_amount = limit_amount
        self.quality_in = quality_in
        self.quality_out = quality_out

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('limit_amount', RippleIssuedAmount, 0),
            2: ('quality_in', p.UVarintType, 0),
            3: ('quality_out', p.UVarintType, 0),
        }
