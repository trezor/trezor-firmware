# Automatically generated by pb2py
# fmt: off
from .. import protobuf as p

from .CardanoTxMetadataType import CardanoTxMetadataType

if __debug__:
    try:
        from typing import Dict, List, Optional  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
        EnumTypeCardanoAuxiliaryDataType = Literal[0, 1]
    except ImportError:
        pass


class CardanoTxAuxiliaryDataType(p.MessageType):

    def __init__(
        self,
        *,
        type: EnumTypeCardanoAuxiliaryDataType,
        blob: Optional[bytes] = None,
        metadata: Optional[CardanoTxMetadataType] = None,
    ) -> None:
        self.type = type
        self.blob = blob
        self.metadata = metadata

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('type', p.EnumType("CardanoAuxiliaryDataType", (0, 1,)), p.FLAG_REQUIRED),
            2: ('blob', p.BytesType, None),
            3: ('metadata', CardanoTxMetadataType, None),
        }
