# Automatically generated by pb2py
# fmt: off
from .. import protobuf as p

if __debug__:
    try:
        from typing import Dict, List, Optional
    except ImportError:
        Dict, List, Optional = None, None, None  # type: ignore


class NEMMosaicSupplyChange(p.MessageType):

    def __init__(
        self,
        namespace: str = None,
        mosaic: str = None,
        type: int = None,
        delta: int = None,
    ) -> None:
        self.namespace = namespace
        self.mosaic = mosaic
        self.type = type
        self.delta = delta

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('namespace', p.UnicodeType, 0),
            2: ('mosaic', p.UnicodeType, 0),
            3: ('type', p.UVarintType, 0),
            4: ('delta', p.UVarintType, 0),
        }
