# Automatically generated by pb2py
# fmt: off
import protobuf as p

from .RippleSignerEntryContainer import RippleSignerEntryContainer

if __debug__:
    try:
        from typing import Dict, List, Optional
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        Dict, List, Optional = None, None, None  # type: ignore


class RippleSignerListSet(p.MessageType):

    def __init__(
        self,
        signer_quorum: int = None,
        signer_entries: List[RippleSignerEntryContainer] = None,
    ) -> None:
        self.signer_quorum = signer_quorum
        self.signer_entries = signer_entries if signer_entries is not None else []

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('signer_quorum', p.UVarintType, 0),
            2: ('signer_entries', RippleSignerEntryContainer, p.FLAG_REPEATED),
        }
