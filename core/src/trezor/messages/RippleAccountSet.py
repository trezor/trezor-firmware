# Automatically generated by pb2py
# fmt: off
import protobuf as p

if __debug__:
    try:
        from typing import Dict, List, Optional
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        Dict, List, Optional = None, None, None  # type: ignore


class RippleAccountSet(p.MessageType):

    def __init__(
        self,
        clear_flag: int = None,
        set_flag: int = None,
        domain: str = None,
        email_hash: str = None,
        message_key: str = None,
        transfer_rate: int = None,
        tick_size: int = None,
    ) -> None:
        self.clear_flag = clear_flag
        self.set_flag = set_flag
        self.domain = domain
        self.email_hash = email_hash
        self.message_key = message_key
        self.transfer_rate = transfer_rate
        self.tick_size = tick_size

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('clear_flag', p.UVarintType, 0),
            2: ('set_flag', p.UVarintType, 0),
            3: ('domain', p.UnicodeType, 0),
            4: ('email_hash', p.UnicodeType, 0),
            5: ('message_key', p.UnicodeType, 0),
            6: ('transfer_rate', p.UVarintType, 0),
            7: ('tick_size', p.UVarintType, 0),
        }
