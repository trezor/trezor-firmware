# Automatically generated by pb2py
# fmt: off
import protobuf as p

from .RippleIssuedAmount import RippleIssuedAmount

if __debug__:
    try:
        from typing import Dict, List, Optional
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        Dict, List, Optional = None, None, None  # type: ignore


class RippleOfferCreate(p.MessageType):

    def __init__(
        self,
        expiration: int = None,
        offer_sequence: int = None,
        taker_gets: int = None,
        issued_taker_gets: RippleIssuedAmount = None,
        taker_pays: int = None,
        issued_taker_pays: RippleIssuedAmount = None,
    ) -> None:
        self.expiration = expiration
        self.offer_sequence = offer_sequence
        self.taker_gets = taker_gets
        self.issued_taker_gets = issued_taker_gets
        self.taker_pays = taker_pays
        self.issued_taker_pays = issued_taker_pays

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('expiration', p.UVarintType, 0),
            2: ('offer_sequence', p.UVarintType, 0),
            3: ('taker_gets', p.UVarintType, 0),
            4: ('issued_taker_gets', RippleIssuedAmount, 0),
            5: ('taker_pays', p.UVarintType, 0),
            6: ('issued_taker_pays', RippleIssuedAmount, 0),
        }
