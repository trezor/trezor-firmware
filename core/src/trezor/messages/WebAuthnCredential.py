# Automatically generated by pb2py
# fmt: off
# isort:skip_file
import protobuf as p

if __debug__:
    try:
        from typing import Dict, List, Optional  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class WebAuthnCredential(p.MessageType):

    def __init__(
        self,
        *,
        index: Optional[int] = None,
        id: Optional[bytes] = None,
        rp_id: Optional[str] = None,
        rp_name: Optional[str] = None,
        user_id: Optional[bytes] = None,
        user_name: Optional[str] = None,
        user_display_name: Optional[str] = None,
        creation_time: Optional[int] = None,
        hmac_secret: Optional[bool] = None,
        use_sign_count: Optional[bool] = None,
        algorithm: Optional[int] = None,
        curve: Optional[int] = None,
    ) -> None:
        self.index = index
        self.id = id
        self.rp_id = rp_id
        self.rp_name = rp_name
        self.user_id = user_id
        self.user_name = user_name
        self.user_display_name = user_display_name
        self.creation_time = creation_time
        self.hmac_secret = hmac_secret
        self.use_sign_count = use_sign_count
        self.algorithm = algorithm
        self.curve = curve

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('index', p.UVarintType, None),
            2: ('id', p.BytesType, None),
            3: ('rp_id', p.UnicodeType, None),
            4: ('rp_name', p.UnicodeType, None),
            5: ('user_id', p.BytesType, None),
            6: ('user_name', p.UnicodeType, None),
            7: ('user_display_name', p.UnicodeType, None),
            8: ('creation_time', p.UVarintType, None),
            9: ('hmac_secret', p.BoolType, None),
            10: ('use_sign_count', p.BoolType, None),
            11: ('algorithm', p.SVarintType, None),
            12: ('curve', p.SVarintType, None),
        }
