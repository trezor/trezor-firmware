# Automatically generated by pb2py
# fmt: off
import protobuf as p

if __debug__:
    try:
        from typing import Dict, List, Optional  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
        EnumTypeCardanoPoolRelayType = Literal[0, 1, 2]
    except ImportError:
        pass


class CardanoPoolRelayParametersType(p.MessageType):

    def __init__(
        self,
        *,
        type: EnumTypeCardanoPoolRelayType,
        ipv4_address: Optional[bytes] = None,
        ipv6_address: Optional[bytes] = None,
        host_name: Optional[str] = None,
        port: Optional[int] = None,
    ) -> None:
        self.type = type
        self.ipv4_address = ipv4_address
        self.ipv6_address = ipv6_address
        self.host_name = host_name
        self.port = port

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('type', p.EnumType("CardanoPoolRelayType", (0, 1, 2)), p.FLAG_REQUIRED),
            2: ('ipv4_address', p.BytesType, None),
            3: ('ipv6_address', p.BytesType, None),
            4: ('host_name', p.UnicodeType, None),
            5: ('port', p.UVarintType, None),
        }
