# Automatically generated by pb2py
# fmt: off
import protobuf as p

if __debug__:
    try:
        from typing import Dict, List  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class BinanceSignTx(p.MessageType):
    MESSAGE_WIRE_TYPE = 704

    def __init__(
        self,
        *,
        address_n: List[int] = None,
        msg_count: int = None,
        account_number: int = None,
        chain_id: str = None,
        memo: str = None,
        sequence: int = None,
        source: int = None,
    ) -> None:
        self.address_n = address_n if address_n is not None else []
        self.msg_count = msg_count
        self.account_number = account_number
        self.chain_id = chain_id
        self.memo = memo
        self.sequence = sequence
        self.source = source

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('address_n', p.UVarintType, p.FLAG_REPEATED),
            2: ('msg_count', p.UVarintType, None),
            3: ('account_number', p.SVarintType, None),
            4: ('chain_id', p.UnicodeType, None),
            5: ('memo', p.UnicodeType, None),
            6: ('sequence', p.SVarintType, None),
            7: ('source', p.SVarintType, None),
        }
