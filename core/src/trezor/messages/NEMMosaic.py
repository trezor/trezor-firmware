# Automatically generated by pb2py
# fmt: off
# isort:skip_file
import protobuf as p

if __debug__:
    try:
        from typing import Dict, List, Optional  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class NEMMosaic(p.MessageType):

    def __init__(
        self,
        *,
        namespace: Optional[str] = None,
        mosaic: Optional[str] = None,
        quantity: Optional[int] = None,
    ) -> None:
        self.namespace = namespace
        self.mosaic = mosaic
        self.quantity = quantity

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('namespace', p.UnicodeType, None),
            2: ('mosaic', p.UnicodeType, None),
            3: ('quantity', p.UVarintType, None),
        }
