# Automatically generated by pb2py
# fmt: off
import protobuf as p

if __debug__:
    try:
        from typing import Dict, List, Optional  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class CipherKeyValue(p.MessageType):
    MESSAGE_WIRE_TYPE = 23

    def __init__(
        self,
        *,
        key: str,
        value: bytes,
        address_n: Optional[List[int]] = None,
        encrypt: Optional[bool] = None,
        ask_on_encrypt: Optional[bool] = None,
        ask_on_decrypt: Optional[bool] = None,
        iv: Optional[bytes] = None,
    ) -> None:
        self.address_n = address_n if address_n is not None else []
        self.key = key
        self.value = value
        self.encrypt = encrypt
        self.ask_on_encrypt = ask_on_encrypt
        self.ask_on_decrypt = ask_on_decrypt
        self.iv = iv

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('address_n', p.UVarintType, p.FLAG_REPEATED),
            2: ('key', p.UnicodeType, p.FLAG_REQUIRED),
            3: ('value', p.BytesType, p.FLAG_REQUIRED),
            4: ('encrypt', p.BoolType, None),
            5: ('ask_on_encrypt', p.BoolType, None),
            6: ('ask_on_decrypt', p.BoolType, None),
            7: ('iv', p.BytesType, None),
        }
