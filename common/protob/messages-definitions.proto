syntax = "proto2";
package hw.trezor.messages.definitions;

// Sugar for easier handling in Java
option java_package = "com.satoshilabs.trezor.lib.protobuf";
option java_outer_classname = "TrezorMessageDefinitions";

/**
 * Definitions type enum.
 * Used to check the encoded EthereumNetworkInfo/EthereumTokenInfo/SolanaTokenInfo message.
 */
enum DefinitionType {
    ETHEREUM_NETWORK = 0;
    ETHEREUM_TOKEN = 1;
    SOLANA_TOKEN = 2;
}

/**
 * Ethereum network definition. Used to (de)serialize the definition.
 *
 * Definition types should not be cross-parseable, i.e., it should not be possible to
 * incorrectly parse network info as token info or vice versa.
 * To achieve that, the first field is wire type varint while the second field is wire type
 * length-delimited. Both are a mismatch for the token definition.
 *
 * @embed
 */
message EthereumNetworkInfo {
    required uint64 chain_id = 1;
    required string symbol = 2;
    required uint32 slip44 = 3;
    required string name = 4;
}

/**
 * Ethereum token definition. Used to (de)serialize the definition.
 *
 * Definition types should not be cross-parseable, i.e., it should not be possible to
 * incorrectly parse network info as token info or vice versa.
 * To achieve that, the first field is wire type length-delimited while the second field
 * is wire type varint. Both are a mismatch for the network definition.
 *
 * @embed
 */
message EthereumTokenInfo {
    required bytes address = 1;
    required uint64 chain_id = 2;
    required string symbol = 3;
    required uint32 decimals = 4;
    required string name = 5;
}

/**
 * Solana token definition. Used to (de)serialize the definition.
 *
 * Definition types should not be cross-parseable, i.e., it should not be possible to
 * incorrectly parse different Solana definitions as each other.
 *
 * @embed
 */
message SolanaTokenInfo {
    required bytes mint = 1;         // token mint - unique token id
    required string program_id = 2;  // token program id, e.g. token program, token22 program
    required string name = 3;
    required string ticker = 4;
}
